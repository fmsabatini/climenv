% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ce_download.R
\name{ce_download}
\alias{ce_download}
\title{ce_download}
\usage{
ce_download(
  output_dir = NULL,
  c_source = NULL,
  mode = "wb",
  var = NULL,
  elev = TRUE,
  e_source = NULL,
  e_location = NULL
)
}
\arguments{
\item{output_dir}{Character (e.g., ".../Desktop/chelsa"). Pathway to where
the data will be stored.}

\item{c_source}{Character. Climatic data source, must be either
\code{"CHELSA"} or \code{"WorldClim"}.}

\item{mode}{Character. See documentation in /code{download.file()}.}

\item{var}{Character. If supplied will download a subset of the climate data.}

\item{elev}{Logical. If TRUE, elevation data will be downloaded}

\item{e_source}{Character. Elevation sourced from mapzen (default) or
geodata.}

\item{e_location}{A \code{sp}, \code{sf} polygon or point object.}
}
\value{
See documentation from \code{worldclim}, \code{chelsa} and \code{elev}.
}
\description{
\code{ce_download} brings together the \code{worldclim},
\code{chelsa} and \code{elev} functions into one location to streamline data
downloading.
}
\examples{
\dontrun{

# Note that the function requires ~13.5 GB of space.
# Download time will depend on your internet connection speed.
# Import the Sibillini National Park Boundary
data(Sibillini_py)
# Run the download function
ce_download(
output_dir = "../WorkingDirectory",
c_source = "WorldClim",
mode = "wb",
elev = TRUE,
e_source = "mapzen",
e_location = Sibillini_py)

See also chelsa(), worldclim() or elev() functions.
}
}
\seealso{
\code{\link{ce_download.R}}
}
\author{
James L. Tsakalos
}
